#include <stdio.h>
#include <stdlib.h>

// Function to merge two subarrays arr[l..m] and arr[m+1..r]
void merge(int arr[], int l, int m, int r) {
    int i, j, k;
    int n1 = m - l + 1;
    int n2 = r - m;

    // Create temporary arrays
    int L[n1], R[n2];

    // Copy data to temporary arrays L[] and R[]
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];

    // Merge the temporary arrays back into arr[l..r]
    i = 0; // Initial index of first subarray
    j = 0; // Initial index of second subarray
    k = l; // Initial index of merged subarray
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    // Copy the remaining elements of L[], if any
    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    // Copy the remaining elements of R[], if any
    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

// Function to perform merge sort on array arr[l..r]
void mergeSort(int arr[], int l, int r) {
    if (l < r) {
        // Find the middle point
        int m = l + (r - l) / 2;

        // Sort first and second halves
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);

        // Merge the sorted halves
        merge(arr, l, m, r);
    }
}

// Function to print an array
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main() {
    // Test cases
    int a1[] = {31, 23, 35, 27, 11, 21, 15, 28};
    int n1 = 8;

    int a2[] = {22, 34, 25, 36, 43, 67, 52, 13, 65, 17};
    int n2 = 10;

    // Sort and print array a1
    printf("Test Case 1:\n");
    printf("Input Array:\n");
    printArray(a1, n1);
    mergeSort(a1, 0, n1 - 1);
    printf("Sorted Array:\n");
    printArray(a1, n1);

    // Sort and print array a2
    printf("\nTest Case 2:\n");
    printf("Input Array:\n");
    printArray(a2, n2);
    mergeSort(a2, 0, n2 - 1);
    printf("Sorted Array:\n");
    printArray(a2, n2);

    return 0;
}
