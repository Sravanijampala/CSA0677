#include <stdio.h>
#include <stdlib.h>

// Define the structure for a linked list node
typedef struct Node {
    int val;
    struct Node* next;
} Node;

// Function to create a new node
Node* newNode(int val) {
    Node* node = (Node*)malloc(sizeof(Node));
    node->val = val;
    node->next = NULL;
    return node;
}

// Function to insert a node into a sorted linked list
Node* insert(Node* head, int val) {
    Node* node = newNode(val);

    if (head == NULL || head->val >= val) {
        node->next = head;
        head = node;
    } else {
        Node* current = head;
        while (current->next != NULL && current->next->val < val) {
            current = current->next;
        }
        node->next = current->next;
        current->next = node;
    }
    return head;
}

// Function to sort a linked list using insertion sort
Node* insertionSortList(Node* head) {
    Node* sorted = NULL;

    while (head != NULL) {
        Node* next = head->next;
        head->next = sorted;
        sorted = insert(sorted, head->val);
        head = next;
    }
    return sorted;
}

// Function to print the linked list
void printList(Node* head) {
    while (head != NULL) {
        printf("%d ", head->val);
        head = head->next;
    }
    printf("\n");
}

int main() {
    // Initialize the linked list: 4 -> 2 -> 1 -> 3
    Node* head = newNode(4);
    head->next = newNode(2);
    head->next->next = newNode(1);
    head->next->next->next = newNode(3);

    // Sort the linked list
    head = insertionSortList(head);

    // Print the sorted linked list
    printList(head);

    return 0;
}
