#include <stdio.h>

void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void reverse(int* nums, int start, int end) {
    while (start < end) {
        swap(&nums[start], &nums[end]);
        start++;
        end--;
    }
}

void nextPermutation(int* nums, int numsSize) {
    int i = numsSize - 2;
    
    // Find the first element that is smaller than the one after it
    while (i >= 0 && nums[i] >= nums[i + 1]) {
        i--;
    }
    
    // If such element is found
    if (i >= 0) {
        int j = numsSize - 1;
        
        // Find the next larger element to swap with
        while (j >= 0 && nums[j] <= nums[i]) {
            j--;
        }
        swap(&nums[i], &nums[j]);
    }
    
    // Reverse the elements after the index i
    reverse(nums, i + 1, numsSize - 1);
}

int main() {
    // Example 1
    int nums1[] = {1, 2, 3};
    int size1 = sizeof(nums1) / sizeof(nums1[0]);
    nextPermutation(nums1, size1);
    for (int i = 0; i < size1; i++) {
        printf("%d ", nums1[i]);
    }
    printf("\n");

    // Example 2
    int nums2[] = {3, 2, 1};
    int size2 = sizeof(nums2) / sizeof(nums2[0]);
    nextPermutation(nums2, size2);
    for (int i = 0; i < size2; i++) {
        printf("%d ", nums2[i]);
    }
    printf("\n");

    // Example 3
    int nums3[] = {1, 1, 5};
    int size3 = sizeof(nums3) / sizeof(nums3[0]);
    nextPermutation(nums3, size3);
    for (int i = 0; i < size3; i++) {
        printf("%d ", nums3[i]);
    }
    printf("\n");

    return 0;
}
