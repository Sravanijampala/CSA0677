#include <stdio.h>
#include <string.h>

// Function to perform left shift
void leftShift(char* s, int len, int amount) {
    amount = amount % len;  // In case amount is greater than length
    if (amount == 0) return;

    char temp[len];
    // Copy the substring that will be moved to the end
    strncpy(temp, s, amount);
    // Shift the remaining characters to the left
    memmove(s, s + amount, len - amount);
    // Append the initial characters to the end
    strncpy(s + len - amount, temp, amount);
}

// Function to perform right shift
void rightShift(char* s, int len, int amount) {
    amount = amount % len;  // In case amount is greater than length
    if (amount == 0) return;

    char temp[len];
    // Copy the substring that will be moved to the beginning
    strncpy(temp, s + len - amount, amount);
    // Shift the remaining characters to the right
    memmove(s + amount, s, len - amount);
    // Prepend the ending characters to the start
    strncpy(s, temp, amount);
}

void performShifts(char* s, int shift[][2], int shiftSize) {
    int len = strlen(s);
    for (int i = 0; i < shiftSize; i++) {
        int direction = shift[i][0];
        int amount = shift[i][1];
        if (direction == 0) {
            leftShift(s, len, amount);
        } else {
            rightShift(s, len, amount);
        }
    }
}

int main() {
    char s1[] = "abc";
    int shift1[][2] = {{0, 1}, {1, 2}};
    int shiftSize1 = sizeof(shift1) / sizeof(shift1[0]);
    performShifts(s1, shift1, shiftSize1);
    printf("Output for s1: %s\n", s1);  // Expected "cab"

    char s2[] = "abcdefg";
    int shift2[][2] = {{1, 1}, {1, 1}, {0, 2}, {1, 3}};
    int shiftSize2 = sizeof(shift2) / sizeof(shift2[0]);
    performShifts(s2, shift2, shiftSize2);
    printf("Output for s2: %s\n", s2);  // Expected "efgabcd"

    return 0;
}
