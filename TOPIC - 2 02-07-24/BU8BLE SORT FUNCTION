#include <stdio.h>

void bubbleSort(int arr[], int n) {
    int i, j, temp;
    int swapped; // Flag to check if any swaps were made
    
    for (i = 0; i < n - 1; ++i) {
        swapped = 0; // Initialize swapped to false
        
        // Last i elements are already in place
        for (j = 0; j < n - 1 - i; ++j) {
            if (arr[j] > arr[j + 1]) {
                // Swap arr[j] and arr[j + 1]
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
                swapped = 1; // Set swapped to true indicating a swap occurred
            }
        }
        
        // If no swap occurred in the inner loop, array is already sorted
        if (swapped == 0) {
            break;
        }
    }
}

int main() {
    int arr1[] = {5, 2, 9, 1, 5, 6};
    int arr2[] = {10, 8, 6, 4, 2};
    int arr3[] = {1, 2, 3, 4, 5};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    int n3 = sizeof(arr3) / sizeof(arr3[0]);
    
    printf("Before sorting:\n");
    for (int i = 0; i < n1; ++i) {
        printf("%d ", arr1[i]);
    }
    printf("\n");
    
    bubbleSort(arr1, n1);
    
    printf("After sorting:\n");
    for (int i = 0; i < n1; ++i) {
        printf("%d ", arr1[i]);
    }
    printf("\n\n");
    
    printf("Before sorting:\n");
    for (int i = 0; i < n2; ++i) {
        printf("%d ", arr2[i]);
    }
    printf("\n");
    
    bubbleSort(arr2, n2);
    
    printf("After sorting:\n");
    for (int i = 0; i < n2; ++i) {
        printf("%d ", arr2[i]);
    }
    printf("\n\n");
    
    printf("Before sorting:\n");
    for (int i = 0; i < n3; ++i) {
        printf("%d ", arr3[i]);
    }
    printf("\n");
    
    bubbleSort(arr3, n3);
    
    printf("After sorting:\n");
    for (int i = 0; i < n3; ++i) {
        printf("%d ", arr3[i]);
    }
    printf("\n");
    
    return 0;
}
