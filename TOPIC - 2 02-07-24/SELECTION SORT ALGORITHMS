#include <stdio.h>

void selectionSort(int arr[], int n) {
    int i, j, minIndex, temp;
    
    for (i = 0; i < n - 1; ++i) {
        minIndex = i;
        // Find the index of the minimum element in the unsorted array
        for (j = i + 1; j < n; ++j) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        // Swap the found minimum element with the first element of the unsorted array
        if (minIndex != i) {
            temp = arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex] = temp;
        }
    }
}

int main() {
    int arr1[] = {5, 2, 9, 1, 5, 6};
    int arr2[] = {10, 8, 6, 4, 2};
    int arr3[] = {1, 2, 3, 4, 5};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    int n3 = sizeof(arr3) / sizeof(arr3[0]);
    
    printf("Sorting a Random Array:\n");
    selectionSort(arr1, n1);
    for (int i = 0; i < n1; ++i) {
        printf("%d ", arr1[i]);
    }
    printf("\n");
    
    printf("Sorting a Reverse Sorted Array:\n");
    selectionSort(arr2, n2);
    for (int i = 0; i < n2; ++i) {
        printf("%d ", arr2[i]);
    }
    printf("\n");
    
    printf("Sorting an Already Sorted Array:\n");
    selectionSort(arr3, n3);
    for (int i = 0; i < n3; ++i) {
        printf("%d ", arr3[i]);
    }
    printf("\n");
    
    return 0;
}
