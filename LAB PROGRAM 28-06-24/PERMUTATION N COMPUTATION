#include <stdio.h>

// Function prototypes
void swap(int *a, int *b);
void permute(int *array, int start, int end);
void print_array(int *array, int size);

// Main function
int main() {
    int n;

    // Input number of elements
    printf("Enter number of elements (n): ");
    scanf("%d", &n);

    // Create an array of integers from 1 to n
    int array[n];
    for (int i = 0; i < n; ++i) {
        array[i] = i + 1;
    }

    // Compute and print all permutations
    printf("Permutations of %d elements:\n", n);
    permute(array, 0, n - 1);

    return 0;
}

// Utility function to swap two integers
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Recursive function to generate permutations
void permute(int *array, int start, int end) {
    if (start == end) {
        print_array(array, end + 1);
        return;
    }

    for (int i = start; i <= end; ++i) {
        // Swap element at index start with element at index i
        swap(&array[start], &array[i]);

        // Recursively generate permutations for the remaining elements
        permute(array, start + 1, end);

        // Backtrack: Undo the swap
        swap(&array[start], &array[i]);
    }
}

// Utility function to print an array
void print_array(int *array, int size) {
    for (int i = 0; i < size; ++i) {
        printf("%d ", array[i]);
    }
    printf("\n");
}
