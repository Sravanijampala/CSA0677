#include <stdio.h>

// Function to find the number of ways to make 'amount' using coins
int coinChange(int coins[], int numCoins, int amount) {
    // Create a table to store solutions to subproblems
    int dp[amount + 1];
    // Initialize all table values as 0
    memset(dp, 0, sizeof(dp));
    
    // Base case: There is one way to make amount 0, which is by not selecting any coin
    dp[0] = 1;
    
    // Iterate over all coins and compute the number of ways for each amount
    for (int i = 0; i < numCoins; i++) {
        for (int j = coins[i]; j <= amount; j++) {
            dp[j] += dp[j - coins[i]];
        }
    }
    
    // dp[amount] now contains the number of ways to make 'amount' using the given coins
    return dp[amount];
}

int main() {
    int coins[] = {1, 2, 5}; // Example denominations
    int numCoins = sizeof(coins) / sizeof(coins[0]);
    int amount = 11; // Example amount to make
    
    int ways = coinChange(coins, numCoins, amount);
    
    printf("Number of ways to make %d using given coins: %d\n", amount, ways);
    
    return 0;
}
