#include <stdio.h>

#define MAX_SIZE 100

int max3x3(int grid[MAX_SIZE][MAX_SIZE], int n, int row, int col) {
    int max_val = grid[row][col];
    
    for (int i = row; i < row + 3; ++i) {
        for (int j = col; j < col + 3; ++j) {
            if (grid[i][j] > max_val) {
                max_val = grid[i][j];
            }
        }
    }
    
    return max_val;
}

void generateMaxLocal(int grid[MAX_SIZE][MAX_SIZE], int n, int maxLocal[MAX_SIZE - 2][MAX_SIZE - 2]) {
    for (int i = 0; i <= n - 3; ++i) {
        for (int j = 0; j <= n - 3; ++j) {
            maxLocal[i][j] = max3x3(grid, n, i, j);
        }
    }
}

void printMatrix(int matrix[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int grid[MAX_SIZE][MAX_SIZE] = {
        {9, 9, 8, 1},
        {5, 6, 2, 6},
        {8, 2, 6, 4},
        {6, 2, 2, 2}
    };
    int n = 4; // size of the grid
    
    int maxLocal[MAX_SIZE - 2][MAX_SIZE - 2]; // result matrix
    
    // Generate maxLocal matrix
    generateMaxLocal(grid, n, maxLocal);
    
    // Print the result matrix
    printf("Output:\n");
    printMatrix(maxLocal, n - 2, n - 2);
    
    return 0;
}
