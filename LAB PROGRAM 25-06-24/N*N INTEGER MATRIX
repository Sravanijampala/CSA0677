#include <stdio.h>

void generateMaxLocal(int grid[][4], int n, int maxLocal[][2]) {
    // Iterate over the result matrix
    for (int i = 0; i < n - 2; ++i) {
        for (int j = 0; j < n - 2; ++j) {
            int maxVal = grid[i][j];
            
            // Find maximum in the 3x3 submatrix centered at (i+1, j+1)
            for (int di = 0; di < 3; ++di) {
                for (int dj = 0; dj < 3; ++dj) {
                    if (grid[i + di][j + dj] > maxVal) {
                        maxVal = grid[i + di][j + dj];
                    }
                }
            }
            
            // Store the maximum value in maxLocal
            maxLocal[i][j] = maxVal;
        }
    }
}

// Function to print the matrix
void printMatrix(int mat[][2], int numRows, int numCols) {
    for (int i = 0; i < numRows; i++) {
        for (int j = 0; j < numCols; j++) {
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }
}

// Example usage
int main() {
    int grid[4][4] = {
        {9, 9, 8, 1},
        {5, 6, 2, 6},
        {8, 2, 6, 4},
        {6, 2, 2, 2}
    };
    int n = 4; // size of the matrix (n x n)
    int maxLocal[2][2]; // result matrix (n-2 x n-2)
    
    // Generate the maxLocal matrix
    generateMaxLocal(grid, n, maxLocal);
    
    // Print the generated matrix
    printf("Generated Matrix maxLocal:\n");
    printMatrix(maxLocal, n-2, n-2);
    
    return 0;
}
